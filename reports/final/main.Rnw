% !TeX document-id = {81191a9b-cc7a-4dfa-a09e-7e87a51baad2}
% !TeX TXS-program:compile = txs:///knit2pdf
\documentclass[a4paper]{article}

\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{amsmath}
\usepackage{xfrac}
\usepackage{color}
\usepackage{float}
\usepackage{graphicx}
\usepackage{calc}
\usepackage{subcaption}
\usepackage[hidelinks]{hyperref}
\usepackage[all]{hypcap}

\graphicspath{{images/}}

\DeclareMathOperator\pos{pos}

\newcommand{\agentsupb}{40 }

\author{Xeryus Stokkel \\ Supervisor: prof. dr. Bart Verheij}
\title{Argumentation Dialogues for Cooperative Pathfinding}

<<preprocess,echo=F,message=F>>=
require(knitr)
require(xtable)
require(plyr)
require(tikzDevice)

# settings
options("xtable.caption.placement" = "top")
options("xtable.table.placement" = "t")
options("xtable.hline.after" = c(0))
options("scipen" = 1)

# Figure titles
perfgraph.title = "Comparison of performance of various algorithms on $10 000$
problem instances."
cachegraph.title = "Comparison of performance of various algorithms with and
without the use of a path cache. Dashed lines indicate that path cache wasn't
used while dotted lines indicate that it was used."
solved.title = "Proportion of instances that were solved."
conflicts.title = "Total number of dialogues completed."
sizes.title="Comparison of number of agents in DPCA*+ dialogues."

file = rev(list.files('../../results', 'benchmark*'))[1]
dat = read.csv(paste('../../results/', file, sep=""), header=T)
file = rev(list.files('../../results', 'cache*'))[1]
dat.cache = read.csv(paste('../../results/', file, sep=""), header=T)
file = rev(list.files('../../results', 'conflictsize-*'))[1]
sizes.dat = read.csv(paste('../../results/', file, sep=""), header=T)

algorithms = c("ODID", "Naive", "Base", "Plus", "Window2", "Window4", "Window8")
cannonical.names = c("OD+ID", "PCA*", "DPCA*", "DPCA*+", "WDPCA*-2",
                     "WDPCA*-4", "WDPCA*-8")
cannonical.names.cache = cannonical.names[3:7]
color.set = c("red", "blue", "green", "grey", "magenta", "cyan", "orange")
color.set.cache = color.set[3:7]

len = length(unique(dat$instance))
od      = sort(dat[dat$algorithm=='ODID',]$time * 1000)
naive   = sort(dat[dat$algorithm=='Naive',]$time * 1000)
base    = sort(dat[dat$algorithm=='Base',]$time * 1000)
plus    = sort(dat[dat$algorithm=='Plus',]$time * 1000)
window2 = sort(dat[dat$algorithm=='Window2',]$time * 1000)
window4 = sort(dat[dat$algorithm=='Window4',]$time * 1000)
window8 = sort(dat[dat$algorithm=='Window8',]$time * 1000)

dat.sub = subset(dat, !is.na(time))
solved = aggregate(time ~ factor(algorithm, levels=algorithms),
                   data=dat,
                   FUN=function(x)1-sum(is.na(x))/length(x),
                   na.action=na.pass)
solved.aggr = aggregate(time ~ factor(algorithm, levels=algorithms) +
                               num.agents,
                        data=dat,
                        FUN=function(x)1-sum(is.na(x))/length(x),
                        na.action=na.pass)
lengths = aggregate(length ~ factor(algorithm, levels=algorithms), data=dat,
                    FUN=mean)
naive.vs.odid = mean(subset(dat, algorithm=="ODID")$time < subset(dat,
                        algorithm=="Naive")$time, na.rm=T)
base.vs.plus = t.test(dat[dat$algorithm=="Base","time"],
                      dat[dat$algorithm=="Plus","time"],
                      paired=T, alternative = "less")

# Influence of window on solve time
windowdat = subset(dat, algorithm %in% c("Window2", "Window4", "Window8"))
w.anova = anova(lm(windowdat$time ~ windowdat$algorithm +
                    windowdat$num.agents))
t.2vs4 = t.test(dat[dat$algorithm=="Window2","time"],
                dat[dat$algorithm=="Window4","time"])
t.2vs8 = t.test(dat[dat$algorithm=="Window2","time"],
                dat[dat$algorithm=="Window8","time"])
t.4vs8 = t.test(dat[dat$algorithm=="Window4","time"],
                dat[dat$algorithm=="Window8","time"])

conflicts.aggr = aggregate(cbind(initial.conflicts, solved.conflicts) ~
                           algorithm + num.agents, data=dat, FUN=mean)

len.cache = length(unique(dat.cache$instance))
base.nocache    = sort(dat.cache[dat.cache$algorithm=='Base' &
                                     dat.cache$cache=='False',]$time * 1000)
plus.nocache    = sort(dat.cache[dat.cache$algorithm=='Plus' &
                                     dat.cache$cache=='False',]$time * 1000)
window2.nocache = sort(dat.cache[dat.cache$algorithm=='Window2' &
                                     dat.cache$cache=='False',]$time * 1000)
window4.nocache = sort(dat.cache[dat.cache$algorithm=='Window4' &
                                     dat.cache$cache=='False',]$time * 1000)
window8.nocache = sort(dat.cache[dat.cache$algorithm=='Window8' &
                                     dat.cache$cache=='False',]$time * 1000)
base.cache      = sort(dat.cache[dat.cache$algorithm=='Base' &
                                     dat.cache$cache=='True',]$time * 1000)
plus.cache      = sort(dat.cache[dat.cache$algorithm=='Plus' &
                                     dat.cache$cache=='True',]$time * 1000)
window2.cache   = sort(dat.cache[dat.cache$algorithm=='Window2' &
                                     dat.cache$cache=='True',]$time * 1000)
window4.cache   = sort(dat.cache[dat.cache$algorithm=='Window4' &
                                     dat.cache$cache=='True',]$time * 1000)
window8.cache   = sort(dat.cache[dat.cache$algorithm=='Window8' &
                                     dat.cache$cache=='True',]$time * 1000)
aggr.cache = aggregate(. ~ num.agents + algorithm + cache, data=dat.cache,
                       FUN=mean)
cache.model = lm(time ~ num.agents + algorithm * cache, data=aggr.cache)
cache.anova = aov(cache.model)
cache.sum = summary(cache.anova)[[1]]

sizes.aggr = aggregate(cbind(X2, X3, X4, X5) ~ num.agents,
                       data=sizes.dat, FUN=mean)
@

\begin{document}

\maketitle

\input{tex/abstract}
\input{tex/intro}
\input{tex/problem}
\input{tex/related_work}
\input{tex/method}
<<resuls-file,child='tex/results.Rnw'>>=
@
\input{tex/discussion}


\bibliographystyle{plain}
\bibliography{literature}

\end{document}
